import com.opencsv.CSVReader;
import com.opencsv.CSVWriter;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicReferenceArray;

public class ParallelCSVProcessing {
    public static void main(String[] args) {
        String inputFilePath = "input.csv"; // Replace with the path to your input CSV file
        String outputFilePath = "output.csv"; // Replace with the desired output file path

        try (CSVReader reader = new CSVReader(new FileReader(inputFilePath));
             CSVWriter writer = new CSVWriter(new FileWriter(outputFilePath))) {

            // Read the header from the input CSV and add a new column for "Status"
            String[] header = reader.readNext();
            String[] newHeader = addColumn(header, "Status");
            writer.writeNext(newHeader);

            // Process rows in parallel
            reader.parallelStream().forEach(row -> {
                // Process each row here, you can modify and add data as needed
                String[] processedRow = processRow(row);
                writer.writeNext(processedRow);
            });

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static String[] addColumn(String[] row, String columnName) {
        String[] newRow = Arrays.copyOf(row, row.length + 1);
        newRow[row.length] = columnName;
        return newRow;
    }

    private static String[] processRow(String[] row) {
        // Process the row here and return the modified row with the "Status" column
        String status = "Done"; // Replace with your logic to determine the status
        return addColumn(row, status);
    }
}
